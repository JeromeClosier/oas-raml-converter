#%RAML 1.0
title: Safe Browsing APIs
version: v4
baseUri: 'https://safebrowsing.googleapis.com/'
protocols:
  - HTTPS
description: Enables client applications to check web resources (most commonly URLs) against Google-generated lists of unsafe web resources.
(oas-tags-definition):
  - name: threatMatches
  - name: threatListUpdates
  - name: fullHashes
  - name: threatLists
annotationTypes:
  oas-tags-definition:
    type: array
    items:
      properties:
        name: string
        description?: string
        externalDocs?:
          properties:
            url: string
            description?: string
    allowedTargets: API
  oas-x-apiClientRegistration: any
  oas-x-logo: any
  oas-x-origin: any
  oas-x-preferred: any
  oas-x-providerName: any
  oas-x-serviceName: any
  oas-tags:
    type: 'string[]'
    allowedTargets: Method
  oas-externalDocs:
    properties:
      description?: string
      url: string
    allowedTargets:
      - API
      - Method
      - TypeDeclaration
  oas-info:
    properties:
      termsOfService?: string
      contact?:
        properties:
          name?: string
          url?: string
          email?: string
      license?:
        properties:
          name?: string
          url?: string
    allowedTargets: API
  oas-body-name:
    type: string
    allowedTargets: TypeDeclaration
(oas-info):
  (oas-x-apiClientRegistration):
    url: 'https://console.developers.google.com'
  (oas-x-logo):
    url: 'https://api.apis.guru/v2/cache/logo/https_www.google.com_images_branding_googlelogo_2x_googlelogo_color_272x92dp.png'
  (oas-x-origin):
    format: google
    url: 'https://www.googleapis.com/discovery/v1/apis/safebrowsing/v4/rest'
    version: v1
  (oas-x-preferred): true
  (oas-x-providerName): googleapis.com
  (oas-x-serviceName): safebrowsing
  contact:
    name: Google
    url: 'https://google.com'
(oas-externalDocs):
  url: 'https://developers.google.com/safe-browsing/'
/v4:
  displayName: v4
  '/threatMatches:find':
    displayName: 'threatMatches:find'
    post:
      displayName: safebrowsing.threatMatches.find
      description: Finds the threat entries that match the Safe Browsing lists.
      body:
        application/json:
          type: FindThreatMatchesRequest
          (oas-body-name): body
      responses:
        '200':
          body:
            application/json:
              type: FindThreatMatchesResponse
          description: Successful response
      (oas-tags):
        - threatMatches
    is:
      - accessToken
      - alt
      - bearerToken
      - callback
      - fields
      - key
      - oauthToken
      - pp
      - prettyPrint
      - quotaUser
      - uploadProtocol
      - uploadType
      - xgafv
  /threatLists:
    displayName: threatLists
    get:
      displayName: safebrowsing.threatLists.list
      description: Lists the Safe Browsing threat lists available for download.
      responses:
        '200':
          body:
            application/json:
              type: ListThreatListsResponse
          description: Successful response
      (oas-tags):
        - threatLists
    is:
      - accessToken
      - alt
      - bearerToken
      - callback
      - fields
      - key
      - oauthToken
      - pp
      - prettyPrint
      - quotaUser
      - uploadProtocol
      - uploadType
      - xgafv
  '/threatListUpdates:fetch':
    displayName: 'threatListUpdates:fetch'
    post:
      displayName: safebrowsing.threatListUpdates.fetch
      description: Fetches the most recent threat list updates. A client can request updates for multiple lists at once.
      body:
        application/json:
          type: FetchThreatListUpdatesRequest
          (oas-body-name): body
      responses:
        '200':
          body:
            application/json:
              type: FetchThreatListUpdatesResponse
          description: Successful response
      (oas-tags):
        - threatListUpdates
    is:
      - accessToken
      - alt
      - bearerToken
      - callback
      - fields
      - key
      - oauthToken
      - pp
      - prettyPrint
      - quotaUser
      - uploadProtocol
      - uploadType
      - xgafv
  '/fullHashes:find':
    displayName: 'fullHashes:find'
    post:
      displayName: safebrowsing.fullHashes.find
      description: Finds the full hashes that match the requested hash prefixes.
      body:
        application/json:
          type: FindFullHashesRequest
          (oas-body-name): body
      responses:
        '200':
          body:
            application/json:
              type: FindFullHashesResponse
          description: Successful response
      (oas-tags):
        - fullHashes
    is:
      - accessToken
      - alt
      - bearerToken
      - callback
      - fields
      - key
      - oauthToken
      - pp
      - prettyPrint
      - quotaUser
      - uploadProtocol
      - uploadType
      - xgafv
types:
  Checksum:
    description: The expected state of a client's local database.
    properties:
      sha256:
        description: 'The SHA256 hash of the client state; that is, of the sorted list of all hashes present in the database.'
        format: byte
        type: string
        facets:
          format: string
        required: false
  ClientInfo:
    description: The client metadata associated with Safe Browsing API requests.
    properties:
      clientId:
        description: A client ID that (hopefully) uniquely identifies the client implementation of the Safe Browsing API.
        type: string
        required: false
      clientVersion:
        description: The version of the client implementation.
        type: string
        required: false
  Constraints:
    description: The constraints for this update.
    properties:
      maxDatabaseEntries:
        description: 'Sets the maximum number of entries that the client is willing to have in the local database. This should be a power of 2 between 2**10 and 2**20. If zero, no database size limit is set.'
        format: int32
        type: integer
        required: false
      maxUpdateEntries:
        description: 'The maximum size in number of entries. The update will not contain more entries than this value. This should be a power of 2 between 2**10 and 2**20. If zero, no update size limit is set.'
        format: int32
        type: integer
        required: false
      region:
        description: Requests the list for a specific geographic location. If not set the server may pick that value based on the user's IP address. Expects ISO 3166-1 alpha-2 format.
        type: string
        required: false
      supportedCompressions:
        description: The compression types supported by the client.
        items:
          enum:
            - COMPRESSION_TYPE_UNSPECIFIED
            - RAW
            - RICE
          type: string
        type: array
        required: false
  FetchThreatListUpdatesRequest:
    description: 'Describes a Safe Browsing API update request. Clients can request updates for multiple lists in a single request. NOTE: Field index 2 is unused. NEXT: 4'
    properties:
      client:
        description: The client metadata.
        type: ClientInfo
        required: false
      listUpdateRequests:
        description: The requested threat list updates.
        items:
          type: ListUpdateRequest
        type: array
        required: false
  FetchThreatListUpdatesResponse:
    properties:
      listUpdateResponses:
        description: The list updates requested by the clients.
        items:
          type: ListUpdateResponse
        type: array
        required: false
      minimumWaitDuration:
        description: The minimum duration the client must wait before issuing any update request. If this field is not set clients may update as soon as they want.
        type: string
        required: false
  FindFullHashesRequest:
    description: Request to return full hashes matched by the provided hash prefixes.
    properties:
      client:
        description: The client metadata.
        type: ClientInfo
        required: false
      clientStates:
        description: The current client states for each of the client's local threat lists.
        items:
          format: byte
          type: string
          facets:
            format: string
        type: array
        required: false
      threatInfo:
        description: The lists and hashes to be checked.
        type: ThreatInfo
        required: false
  FindFullHashesResponse:
    properties:
      matches:
        description: The full hashes that matched the requested prefixes.
        items:
          type: ThreatMatch
        type: array
        required: false
      minimumWaitDuration:
        description: 'The minimum duration the client must wait before issuing any find hashes request. If this field is not set, clients can issue a request as soon as they want.'
        type: string
        required: false
      negativeCacheDuration:
        description: 'For requested entities that did not match the threat list, how long to cache the response.'
        type: string
        required: false
  FindThreatMatchesRequest:
    description: Request to check entries against lists.
    properties:
      client:
        description: The client metadata.
        type: ClientInfo
        required: false
      threatInfo:
        description: The lists and entries to be checked for matches.
        type: ThreatInfo
        required: false
  FindThreatMatchesResponse:
    properties:
      matches:
        description: The threat list matches.
        items:
          type: ThreatMatch
        type: array
        required: false
  ListThreatListsResponse:
    properties:
      threatLists:
        description: The lists available for download by the client.
        items:
          type: ThreatListDescriptor
        type: array
        required: false
  ListUpdateRequest:
    description: A single list update request.
    properties:
      constraints:
        description: The constraints associated with this request.
        type: Constraints
        required: false
      platformType:
        description: The type of platform at risk by entries present in the list.
        enum:
          - PLATFORM_TYPE_UNSPECIFIED
          - WINDOWS
          - LINUX
          - ANDROID
          - OSX
          - IOS
          - ANY_PLATFORM
          - ALL_PLATFORMS
          - CHROME
        type: string
        required: false
      state:
        description: The current state of the client for the requested list (the encrypted client state that was received from the last successful list update).
        format: byte
        type: string
        facets:
          format: string
        required: false
      threatEntryType:
        description: The types of entries present in the list.
        enum:
          - THREAT_ENTRY_TYPE_UNSPECIFIED
          - URL
          - EXECUTABLE
          - IP_RANGE
        type: string
        required: false
      threatType:
        description: The type of threat posed by entries present in the list.
        enum:
          - THREAT_TYPE_UNSPECIFIED
          - MALWARE
          - SOCIAL_ENGINEERING
          - UNWANTED_SOFTWARE
          - POTENTIALLY_HARMFUL_APPLICATION
        type: string
        required: false
  ListUpdateResponse:
    description: An update to an individual list.
    properties:
      additions:
        description: A set of entries to add to a local threat type's list. Repeated to allow for a combination of compressed and raw data to be sent in a single response.
        items:
          type: ThreatEntrySet
        type: array
        required: false
      checksum:
        description: 'The expected SHA256 hash of the client state; that is, of the sorted list of all hashes present in the database after applying the provided update. If the client state doesn''t match the expected state, the client must disregard this update and retry later.'
        type: Checksum
        required: false
      newClientState:
        description: 'The new client state, in encrypted format. Opaque to clients.'
        format: byte
        type: string
        facets:
          format: string
        required: false
      platformType:
        description: The platform type for which data is returned.
        enum:
          - PLATFORM_TYPE_UNSPECIFIED
          - WINDOWS
          - LINUX
          - ANDROID
          - OSX
          - IOS
          - ANY_PLATFORM
          - ALL_PLATFORMS
          - CHROME
        type: string
        required: false
      removals:
        description: A set of entries to remove from a local threat type's list. Repeated for the same reason as above.
        items:
          type: ThreatEntrySet
        type: array
        required: false
      responseType:
        description: The type of response. This may indicate that an action is required by the client when the response is received.
        enum:
          - RESPONSE_TYPE_UNSPECIFIED
          - PARTIAL_UPDATE
          - FULL_UPDATE
        type: string
        required: false
      threatEntryType:
        description: The format of the threats.
        enum:
          - THREAT_ENTRY_TYPE_UNSPECIFIED
          - URL
          - EXECUTABLE
          - IP_RANGE
        type: string
        required: false
      threatType:
        description: The threat type for which data is returned.
        enum:
          - THREAT_TYPE_UNSPECIFIED
          - MALWARE
          - SOCIAL_ENGINEERING
          - UNWANTED_SOFTWARE
          - POTENTIALLY_HARMFUL_APPLICATION
        type: string
        required: false
  MetadataEntry:
    description: A single metadata entry.
    properties:
      key:
        description: The metadata entry key.
        format: byte
        type: string
        facets:
          format: string
        required: false
      value:
        description: The metadata entry value.
        format: byte
        type: string
        facets:
          format: string
        required: false
  RawHashes:
    description: 'The uncompressed threat entries in hash format of a particular prefix length. Hashes can be anywhere from 4 to 32 bytes in size. A large majority are 4 bytes, but some hashes are lengthened if they collide with the hash of a popular URL. Used for sending ThreatEntrySet to clients that do not support compression, or when sending non-4-byte hashes to clients that do support compression.'
    properties:
      prefixSize:
        description: The number of bytes for each prefix encoded below. This field can be anywhere from 4 (shortest prefix) to 32 (full SHA256 hash).
        format: int32
        type: integer
        required: false
      rawHashes:
        description: 'The hashes, all concatenated into one long string. Each hash has a prefix size of |prefix_size| above. Hashes are sorted in lexicographic order.'
        format: byte
        type: string
        facets:
          format: string
        required: false
  RawIndices:
    description: A set of raw indices to remove from a local list.
    properties:
      indices:
        description: The indices to remove from a lexicographically-sorted local list.
        items:
          format: int32
          type: integer
        type: array
        required: false
  RiceDeltaEncoding:
    description: The Rice-Golomb encoded data. Used for sending compressed 4-byte hashes or compressed removal indices.
    properties:
      encodedData:
        description: The encoded deltas that are encoded using the Golomb-Rice coder.
        format: byte
        type: string
        facets:
          format: string
        required: false
      firstValue:
        description: 'The offset of the first entry in the encoded data, or, if only a single integer was encoded, that single integer''s value.'
        format: int64
        type: string
        facets:
          format: string
        required: false
      numEntries:
        description: 'The number of entries that are delta encoded in the encoded data. If only a single integer was encoded, this will be zero and the single value will be stored in `first_value`.'
        format: int32
        type: integer
        required: false
      riceParameter:
        description: 'The Golomb-Rice parameter, which is a number between 2 and 28. This field is missing (that is, zero) if `num_entries` is zero.'
        format: int32
        type: integer
        required: false
  ThreatEntry:
    description: 'An individual threat; for example, a malicious URL or its hash representation. Only one of these fields should be set.'
    properties:
      digest:
        description: The digest of an executable in SHA256 format. The API supports both binary and hex digests.
        format: byte
        type: string
        facets:
          format: string
        required: false
      hash:
        description: 'A hash prefix, consisting of the most significant 4-32 bytes of a SHA256 hash. This field is in binary format.'
        format: byte
        type: string
        facets:
          format: string
        required: false
      url:
        description: A URL.
        type: string
        required: false
  ThreatEntryMetadata:
    description: The metadata associated with a specific threat entry. The client is expected to know the metadata key/value pairs associated with each threat type.
    properties:
      entries:
        description: The metadata entries.
        items:
          type: MetadataEntry
        type: array
        required: false
  ThreatEntrySet:
    description: A set of threats that should be added or removed from a client's local database.
    properties:
      compressionType:
        description: The compression type for the entries in this set.
        enum:
          - COMPRESSION_TYPE_UNSPECIFIED
          - RAW
          - RICE
        type: string
        required: false
      rawHashes:
        description: The raw SHA256-formatted entries.
        type: RawHashes
        required: false
      rawIndices:
        description: The raw removal indices for a local list.
        type: RawIndices
        required: false
      riceHashes:
        description: 'The encoded 4-byte prefixes of SHA256-formatted entries, using a Golomb-Rice encoding.'
        type: RiceDeltaEncoding
        required: false
      riceIndices:
        description: 'The encoded local, lexicographically-sorted list indices, using a Golomb-Rice encoding. Used for sending compressed removal indices.'
        type: RiceDeltaEncoding
        required: false
  ThreatInfo:
    description: The information regarding one or more threats that a client submits when checking for matches in threat lists.
    properties:
      platformTypes:
        description: The platform types to be checked.
        items:
          enum:
            - PLATFORM_TYPE_UNSPECIFIED
            - WINDOWS
            - LINUX
            - ANDROID
            - OSX
            - IOS
            - ANY_PLATFORM
            - ALL_PLATFORMS
            - CHROME
          type: string
        type: array
        required: false
      threatEntries:
        description: The threat entries to be checked.
        items:
          type: ThreatEntry
        type: array
        required: false
      threatEntryTypes:
        description: The entry types to be checked.
        items:
          enum:
            - THREAT_ENTRY_TYPE_UNSPECIFIED
            - URL
            - EXECUTABLE
            - IP_RANGE
          type: string
        type: array
        required: false
      threatTypes:
        description: The threat types to be checked.
        items:
          enum:
            - THREAT_TYPE_UNSPECIFIED
            - MALWARE
            - SOCIAL_ENGINEERING
            - UNWANTED_SOFTWARE
            - POTENTIALLY_HARMFUL_APPLICATION
          type: string
        type: array
        required: false
  ThreatListDescriptor:
    description: 'Describes an individual threat list. A list is defined by three parameters: the type of threat posed, the type of platform targeted by the threat, and the type of entries in the list.'
    properties:
      platformType:
        description: The platform type targeted by the list's entries.
        enum:
          - PLATFORM_TYPE_UNSPECIFIED
          - WINDOWS
          - LINUX
          - ANDROID
          - OSX
          - IOS
          - ANY_PLATFORM
          - ALL_PLATFORMS
          - CHROME
        type: string
        required: false
      threatEntryType:
        description: The entry types contained in the list.
        enum:
          - THREAT_ENTRY_TYPE_UNSPECIFIED
          - URL
          - EXECUTABLE
          - IP_RANGE
        type: string
        required: false
      threatType:
        description: The threat type posed by the list's entries.
        enum:
          - THREAT_TYPE_UNSPECIFIED
          - MALWARE
          - SOCIAL_ENGINEERING
          - UNWANTED_SOFTWARE
          - POTENTIALLY_HARMFUL_APPLICATION
        type: string
        required: false
  ThreatMatch:
    description: A match when checking a threat entry in the Safe Browsing threat lists.
    properties:
      cacheDuration:
        description: The cache lifetime for the returned match. Clients must not cache this response for more than this duration to avoid false positives.
        type: string
        required: false
      platformType:
        description: The platform type matching this threat.
        enum:
          - PLATFORM_TYPE_UNSPECIFIED
          - WINDOWS
          - LINUX
          - ANDROID
          - OSX
          - IOS
          - ANY_PLATFORM
          - ALL_PLATFORMS
          - CHROME
        type: string
        required: false
      threat:
        description: The threat matching this threat.
        type: ThreatEntry
        required: false
      threatEntryMetadata:
        description: Optional metadata associated with this threat.
        type: ThreatEntryMetadata
        required: false
      threatEntryType:
        description: The threat entry type matching this threat.
        enum:
          - THREAT_ENTRY_TYPE_UNSPECIFIED
          - URL
          - EXECUTABLE
          - IP_RANGE
        type: string
        required: false
      threatType:
        description: The threat type matching this threat.
        enum:
          - THREAT_TYPE_UNSPECIFIED
          - MALWARE
          - SOCIAL_ENGINEERING
          - UNWANTED_SOFTWARE
          - POTENTIALLY_HARMFUL_APPLICATION
        type: string
        required: false
traits:
  xgafv:
    queryParameters:
      $.xgafv:
        type: string
        description: V1 error format.
  accessToken:
    queryParameters:
      access_token:
        type: string
        description: OAuth access token.
  alt:
    queryParameters:
      alt:
        type: string
        description: Data format for response.
        default: json
  bearerToken:
    queryParameters:
      bearer_token:
        type: string
        description: OAuth bearer token.
  callback:
    queryParameters:
      callback:
        type: string
        description: JSONP
  fields:
    queryParameters:
      fields:
        type: string
        description: Selector specifying which fields to include in a partial response.
  key:
    queryParameters:
      key:
        type: string
        description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
  oauthToken:
    queryParameters:
      oauth_token:
        type: string
        description: OAuth 2.0 token for the current user.
  pp:
    queryParameters:
      pp:
        type: boolean
        description: Pretty-print response.
        default: true
  prettyPrint:
    queryParameters:
      prettyPrint:
        type: boolean
        description: Returns response with indentations and line breaks.
        default: true
  quotaUser:
    queryParameters:
      quotaUser:
        type: string
        description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
  uploadType:
    queryParameters:
      uploadType:
        type: string
        description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
  uploadProtocol:
    queryParameters:
      upload_protocol:
        type: string
        description: 'Upload protocol for media (e.g. "raw", "multipart").'
