#%RAML 1.0
title: Groups Migration
version: v1
baseUri: 'https://www.googleapis.com/groups/v1/groups'
mediaType: message/rfc822
protocols:
  - HTTPS
description: Groups Migration Api.
(oas-tags-definition):
  - name: archive
annotationTypes:
  oas-tags-definition:
    type: array
    items:
      properties:
        name: string
        description?: string
        externalDocs?:
          properties:
            url: string
            description?: string
    allowedTargets: API
  oas-x-apiClientRegistration: any
  oas-x-logo: any
  oas-x-origin: any
  oas-x-preferred: any
  oas-x-providerName: any
  oas-x-serviceName: any
  oas-tags:
    type: 'string[]'
    allowedTargets: Method
  oas-externalDocs:
    properties:
      description?: string
      url: string
    allowedTargets:
      - API
      - Method
      - TypeDeclaration
  oas-info:
    properties:
      termsOfService?: string
      contact?:
        properties:
          name?: string
          url?: string
          email?: string
      license?:
        properties:
          name?: string
          url?: string
    allowedTargets: API
(oas-info):
  (oas-x-apiClientRegistration):
    url: 'https://console.developers.google.com'
  (oas-x-logo):
    url: 'https://api.apis.guru/v2/cache/logo/https_www.google.com_images_branding_googlelogo_2x_googlelogo_color_272x92dp.png'
  (oas-x-origin):
    format: google
    url: 'https://www.googleapis.com/discovery/v1/apis/groupsmigration/v1/rest'
    version: v1
  (oas-x-preferred): true
  (oas-x-providerName): googleapis.com
  (oas-x-serviceName): groupsmigration
  contact:
    name: Google
    url: 'https://google.com'
(oas-externalDocs):
  url: 'https://developers.google.com/google-apps/groups-migration/'
securitySchemes:
  Oauth2:
    type: OAuth 2.0
    settings:
      authorizationUri: 'https://accounts.google.com/o/oauth2/auth'
      accessTokenUri: ''
      authorizationGrants:
        - implicit
      scopes:
        - 'https://www.googleapis.com/auth/apps.groups.migration'
    description: Oauth 2.0 authentication
'/{groupId}':
  displayName: '{groupId}'
  /archive:
    displayName: archive
    post:
      displayName: groupsmigration.archive.insert
      description: Inserts a new mail into the archive of the Google group.
      responses:
        '200':
          body:
            message/rfc822:
              type: Groups
          description: Successful response
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/apps.groups.migration'
      (oas-tags):
        - archive
    is:
      - alt
      - fields
      - key
      - oauthToken
      - prettyPrint
      - quotaUser
      - userIp
types:
  Groups:
    description: JSON response template for groups migration API.
    properties:
      kind:
        default: 'groupsmigration#groups'
        description: The kind of insert resource this is.
        type: string
        required: false
      responseCode:
        description: The status of the insert request.
        type: string
        required: false
traits:
  alt:
    queryParameters:
      alt:
        type: string
        description: Data format for the response.
        default: json
        enum:
          - json
  fields:
    queryParameters:
      fields:
        type: string
        description: Selector specifying which fields to include in a partial response.
  key:
    queryParameters:
      key:
        type: string
        description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
  oauthToken:
    queryParameters:
      oauth_token:
        type: string
        description: OAuth 2.0 token for the current user.
  prettyPrint:
    queryParameters:
      prettyPrint:
        type: boolean
        description: Returns response with indentations and line breaks.
        default: true
  quotaUser:
    queryParameters:
      quotaUser:
        type: string
        description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.'
  userIp:
    queryParameters:
      userIp:
        type: string
        description: IP address of the site where the request originates. Use this if you want to enforce per-user limits.
